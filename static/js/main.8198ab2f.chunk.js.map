{"version":3,"sources":["components/TopBar.js","components/Studio/Button.js","components/Studio/index.js","App.js","serviceWorker.js","index.js"],"names":["styles","root","backgroundColor","color","padding","TopBar","react_default","a","createElement","style","border","fontSize","active","Button","_ref","text","onClick","Object","objectSpread","resolutions","1080p","width","height","720p","sources","audio","camera","video","screen","mediaSource","display","flexDirection","justifyContent","alignItems","canvas","maxWidth","maxHeight","toolbar","position","bottom","flexWrap","toolbarGroup","Studio","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","recorder","recordedBlobs","state","resolution","isRecording","isPaused","update","bind","assertThisInitialized","getUserMedia","record","pause","stop","console","log","ctx","getContext","clearRect","drawImage","save","beginPath","arc","videoWidth","videoHeight","Math","PI","closePath","clip","restore","window","requestAnimationFrame","type","_this2","setState","defineProperty","navigator","mediaDevices","then","stream","createAudioSource","streamSettings","getVideoTracks","getSettings","document","setAttribute","srcObject","play","createVideoSource","catch","error","_this3","outputStream","MediaStream","toConsumableArray","concat","captureStream","forEach","getTracks","track","addTrack","MediaRecorder","mimeType","addEventListener","e","data","size","push","start","resume","_this4","blob","Blob","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","_this5","_this$state","ref","disabled","value","onChange","target","keys","map","key","React","Component","App","components_Studio","Boolean","location","hostname","match","unsupportedFeatures","HTMLCanvasElement","HTMLVideoElement","reduce","memo","dep","name","length","ReactDOM","render","join","getElementById","src_App","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8198ab2f.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst styles = {\n  root: {\n    backgroundColor: '#111',\n    color: 'crimson',\n    padding: 20,\n  },\n};\n\n\nexport default () => (\n  <div style={styles.root}>Castor</div>\n);\n","import React from 'react';\n\n\nconst styles = {\n  root: {\n    backgroundColor: '#333',\n    border: '1px solid #222',\n    padding: 10,\n    fontSize: '2em',\n  },\n  active: {\n    backgroundColor: '#99ff99',\n  },\n};\n\n\nexport default ({ text, active, onClick }) => (\n  <button\n    style={(active) ?  { ...styles.root, ...styles.active } : styles.root}\n    onClick={onClick}\n  >{text}</button>\n);\n","import React from 'react';\nimport Button from './Button';\n\n\nconst resolutions = {\n  '1080p':{ width: 1920, height: 1080 },\n  '720p': { width: 1280, height: 720 },\n};\n\n\nconst sources = {\n  audio: { audio: true },\n  camera: { video: true },\n  screen: { video: { mediaSource: 'screen' } },\n};\n\n\nconst styles = {\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  canvas: {\n    backgroundColor: '#666',\n    maxWidth: '100%',\n    maxHeight: '100vh',\n  },\n  toolbar: {\n    position: 'absolute',\n    bottom: '10%',\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  toolbarGroup: {\n    padding: 10,\n  },\n};\n\n\nconst createVideoSource = (stream) => {\n  const streamSettings = stream.getVideoTracks()[0].getSettings();\n  const video = document.createElement('video');\n  video.setAttribute('width', streamSettings.width);\n  video.setAttribute('height', streamSettings.height);\n  video.srcObject = stream;\n  video.play();\n  return { stream, video };\n};\n\n\nconst createAudioSource = (stream) => {\n  // meter?\n  return { stream };\n};\n\n\nclass Studio extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvas = null;\n    this.recorder = null;\n    this.recordedBlobs = [];\n\n    this.state = {\n      audio: false,\n      camera: false,\n      screen: false,\n      resolution: '720p',\n      isRecording: false,\n      isPaused: false,\n    };\n\n    this.update = this.update.bind(this);\n    this.getUserMedia = this.getUserMedia.bind(this);\n    this.record = this.record.bind(this);\n    this.pause = this.pause.bind(this);\n    this.stop = this.stop.bind(this);\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount');\n    this.update();\n  }\n\n  componentWillUnmount() {\n    console.log('componentWillUnmount');\n  }\n\n  update() {\n    const { canvas, state } = this;\n    const { audio, camera, screen } = state;\n\n    if (!canvas) {\n      return;\n    }\n\n    const ctx = canvas.getContext('2d');\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    if (screen && screen.video) {\n      // TODO: assuming screen.video and canvas have same aspect ratio!\n      ctx.drawImage(\n        screen.video,\n        0,\n        0,\n        canvas.width,\n        canvas.height,\n      );\n    }\n\n    if (camera && camera.video) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(\n        (canvas.width - (camera.video.videoWidth / 4)) + 20,\n        (canvas.height - (camera.video.videoHeight / 4)) - 15,\n        camera.video.videoHeight / 4,\n        0,\n        2 * Math.PI,\n      );\n      ctx.closePath();\n      ctx.clip();\n\n      ctx.drawImage(\n        camera.video,\n        (canvas.width - (camera.video.videoWidth / 2)) + 20,\n        (canvas.height - (camera.video.videoHeight / 2)) - 15,\n        camera.video.videoWidth / 2,\n        camera.video.videoHeight / 2,\n      );\n      ctx.restore();\n    }\n\n    if (audio) {\n      // update meter??\n    }\n\n    window.requestAnimationFrame(this.update);\n  }\n\n  getUserMedia(type) {\n    if (this.state[type]) {\n      return this.setState({ [type]: false });\n    }\n\n    navigator.mediaDevices.getUserMedia(sources[type])\n      .then((stream) => {\n        if (type === 'audio') {\n          this.setState({ [type]: createAudioSource(stream) });\n        } else {\n          this.setState({ [type]: createVideoSource(stream) });\n        }\n      })\n      .catch(error => this.setState({ [type]: { error } }));\n  }\n\n  record() {\n    if (this.state.isRecording) {\n      return;\n    }\n\n    const outputStream = new MediaStream();\n    const inputStreams = [\n      ...(this.state.audio && this.state.audio.stream ? [this.state.audio.stream] : []),\n      ...(this.state.camera || this.state.screen ? [this.canvas.captureStream()] : []),\n    ];\n\n    inputStreams.forEach(\n      stream => stream.getTracks().forEach(\n        track => outputStream.addTrack(track),\n      ),\n    );\n\n    this.recordedBlobs = [];\n    this.recorder = new MediaRecorder(outputStream, {\n      mimeType: 'video/webm',\n      // audioBitsPerSecond : 128000,\n      // videoBitsPerSecond : 2500000,\n    });\n\n    this.recorder.addEventListener('dataavailable', (e) => {\n      if (e.data && e.data.size > 0) {\n        this.recordedBlobs.push(e.data);\n      }\n    });\n\n    this.recorder.start(1000);\n    this.setState({ isRecording: true, isPaused: false });\n  }\n\n  pause() {\n    if (this.state.isPaused) {\n      this.recorder.resume();\n      this.setState({ isRecording: true, isPaused: false });\n    } else {\n      this.recorder.pause();\n      this.setState({ isRecording: true, isPaused: true });\n    }\n  }\n\n  stop() {\n    this.recorder.stop();\n\n    const blob = new Blob(this.recordedBlobs, { type: 'video/webm' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.style.display = 'none';\n    a.href = url;\n    a.download = 'test.webm';\n    document.body.appendChild(a);\n    a.click();\n    setTimeout(() => {\n      document.body.removeChild(a);\n      window.URL.revokeObjectURL(url);\n      this.setState({ isRecording: false, isPaused: false });\n    }, 100);\n  }\n\n  render() {\n    const { audio, camera, screen, resolution, isRecording, isPaused } = this.state;\n    console.log(resolution);\n    return (\n      <div style={styles.root}>\n        <canvas\n          width={resolutions[resolution].width}\n          height={resolutions[resolution].height}\n          style={styles.canvas}\n          ref={(canvas) => { this.canvas = canvas; }}\n        ></canvas>\n        <div style={styles.toolbar}>\n          <select disabled={isRecording} value={resolution} onChange={(e) => this.setState({ resolution: e.target.value })}>\n            {Object.keys(resolutions).map(key => (\n              <option key={key} value={key}>{key}</option>\n            ))}\n          </select>\n          <div style={styles.toolbarGroup}>\n            <Button text=\"🎙\" active={!!audio} onClick={() => this.getUserMedia('audio')} />\n            <Button text=\"🎥\" active={!!camera} onClick={() => this.getUserMedia('camera')} />\n            <Button text=\"💻\" active={!!screen} onClick={() => this.getUserMedia('screen')} />\n          </div>\n          <div style={styles.toolbarGroup}>\n            {!isRecording\n              ? <Button text=\"⏺\" active={isRecording} onClick={this.record} />\n              : <Button text=\"⏹\" active={isRecording} onClick={this.stop} />\n            }\n            {isRecording && (\n              <Button\n                text={isPaused ? '▶️' : '⏸️'}\n                active={isPaused} onClick={this.pause}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default Studio;\n","import React from 'react';\nimport TopBar from './components/TopBar';\nimport Studio from './components/Studio';\n\n\nconst App = () => (\n  <div>\n    <TopBar />\n    <Studio />\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nconst unsupportedFeatures = [\n  HTMLCanvasElement,\n  HTMLVideoElement,\n  Blob,\n  window.requestAnimationFrame,\n  (window.URL || {}).createObjectURL,\n  (window.URL || {}).revokeObjectURL,\n  (navigator.mediaDevices || {}).getUserMedia,\n  MediaStream,\n  MediaRecorder,\n].reduce(\n  (memo, dep) => (\n    (typeof dep !== 'function')\n      ? [...memo, dep.name]\n      : memo\n  ),\n  [],\n);\n\n\nif (unsupportedFeatures.length) {\n  ReactDOM.render(\n    (\n      <div style={{ color: 'crimson', padding: 20 }}>\n        Unsupported features: {unsupportedFeatures.join(', ')}\n      </div>\n    ),\n    document.getElementById('root'),\n  );\n} else {\n  ReactDOM.render(<App />, document.getElementById('root'));\n}\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}