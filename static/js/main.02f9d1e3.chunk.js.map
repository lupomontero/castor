{"version":3,"sources":["components/TopBar.js","components/Studio/Button.js","components/Studio/index.js","App.js","serviceWorker.js","index.js"],"names":["styles","root","backgroundColor","color","padding","TopBar","react_default","a","createElement","style","border","fontSize","active","Button","_ref","text","onClick","Object","objectSpread","resolutions","1080p","width","height","720p","sources","audio","camera","video","screen","mediaSource","display","flexDirection","justifyContent","alignItems","canvas","maxWidth","maxHeight","toolbar","position","bottom","flexWrap","toolbarGroup","Studio","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","recorder","recordedBlobs","state","resolution","isRecording","isPaused","update","bind","assertThisInitialized","getUserMedia","record","pause","stop","console","log","ctx","canvasAspectRatio","screenAspectRatio","videoWidth","videoHeight","_ref2","slicedToArray","screenWidth","screenHeight","screenX","screenY","drawImage","save","beginPath","arc","Math","PI","closePath","clip","restore","getContext","clearRect","drawScreen","drawCamera","window","requestAnimationFrame","type","_this2","setState","defineProperty","navigator","mediaDevices","then","stream","createAudioSource","streamSettings","getVideoTracks","getSettings","document","setAttribute","srcObject","play","createVideoSource","catch","error","_this3","outputStream","MediaStream","concat","toConsumableArray","captureStream","forEach","getTracks","track","addTrack","MediaRecorder","mimeType","addEventListener","e","data","size","push","start","resume","_this4","blob","Blob","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","_this5","_this$state","ref","disabled","value","onChange","target","keys","map","key","React","Component","App","components_Studio","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.02f9d1e3.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst styles = {\n  root: {\n    backgroundColor: '#111',\n    color: 'crimson',\n    padding: 20,\n  },\n};\n\n\nexport default () => (\n  <div style={styles.root}>Castor</div>\n);\n","import React from 'react';\n\n\nconst styles = {\n  root: {\n    backgroundColor: '#333',\n    border: '1px solid #222',\n    padding: 10,\n    fontSize: '2em',\n  },\n  active: {\n    backgroundColor: '#99ff99',\n  },\n};\n\n\nexport default ({ text, active, onClick }) => (\n  <button\n    style={(active) ?  { ...styles.root, ...styles.active } : styles.root}\n    onClick={onClick}\n  >{text}</button>\n);\n","import React from 'react';\nimport Button from './Button';\n\n\nconst resolutions = {\n  '1080p':{ width: 1920, height: 1080 },\n  '720p': { width: 1280, height: 720 },\n};\n\n\nconst sources = {\n  audio: { audio: true },\n  camera: { video: true },\n  screen: { video: { mediaSource: 'screen' } },\n};\n\n\nconst styles = {\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  canvas: {\n    backgroundColor: '#000',\n    maxWidth: '100%',\n    maxHeight: '100vh',\n  },\n  toolbar: {\n    position: 'absolute',\n    bottom: '10%',\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  toolbarGroup: {\n    padding: 10,\n  },\n};\n\n\nconst createVideoSource = (stream) => {\n  const streamSettings = stream.getVideoTracks()[0].getSettings();\n  const video = document.createElement('video');\n  video.setAttribute('width', streamSettings.width);\n  video.setAttribute('height', streamSettings.height);\n  video.srcObject = stream;\n  video.play();\n  return { stream, video };\n};\n\n\nconst createAudioSource = (stream) => {\n  // meter?\n  return { stream };\n};\n\n\nclass Studio extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.canvas = null;\n    this.recorder = null;\n    this.recordedBlobs = [];\n\n    this.state = {\n      audio: false,\n      camera: false,\n      screen: false,\n      resolution: '720p',\n      isRecording: false,\n      isPaused: false,\n    };\n\n    this.update = this.update.bind(this);\n    this.getUserMedia = this.getUserMedia.bind(this);\n    this.record = this.record.bind(this);\n    this.pause = this.pause.bind(this);\n    this.stop = this.stop.bind(this);\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount');\n    this.update();\n  }\n\n  componentWillUnmount() {\n    console.log('componentWillUnmount');\n  }\n\n  drawScreen(screen, canvas, ctx) {\n    const canvasAspectRatio = canvas.width / canvas.height;\n    const screenAspectRatio = screen.video.videoWidth / screen.video.videoHeight;\n    const [screenWidth, screenHeight, screenX, screenY] = (\n      (canvasAspectRatio > screenAspectRatio)\n        ? [\n          canvas.height * screenAspectRatio,\n          canvas.height,\n          (canvas.width - (canvas.height * screenAspectRatio)) / 2,\n          0,\n        ]\n        : [\n          canvas.width,\n          canvas.width * screenAspectRatio,\n          0,\n          (canvas.height - (canvas.width * screenAspectRatio)) / 2,\n        ]\n    );\n    ctx.drawImage(\n      screen.video,\n      screenX,\n      screenY,\n      screenWidth,\n      screenHeight,\n    );\n  }\n\n  drawCamera(camera, canvas, ctx) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.arc(\n      (canvas.width - (camera.video.videoWidth / 4)) + 20,\n      (canvas.height - (camera.video.videoHeight / 4)) - 15,\n      camera.video.videoHeight / 4,\n      0,\n      2 * Math.PI,\n    );\n    ctx.closePath();\n    ctx.clip();\n\n    ctx.drawImage(\n      camera.video,\n      (canvas.width - (camera.video.videoWidth / 2)) + 20,\n      (canvas.height - (camera.video.videoHeight / 2)) - 15,\n      camera.video.videoWidth / 2,\n      camera.video.videoHeight / 2,\n    );\n    ctx.restore();\n  }\n\n  update() {\n    const { canvas, state } = this;\n    const { audio, camera, screen } = state;\n\n    if (!canvas) {\n      return;\n    }\n\n    const ctx = canvas.getContext('2d');\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    if (screen && screen.video) {\n      this.drawScreen(screen, canvas, ctx);\n    }\n\n    if (camera && camera.video) {\n      this.drawCamera(camera, canvas, ctx);\n    }\n\n    if (audio) {\n      // update meter??\n    }\n\n    window.requestAnimationFrame(this.update);\n  }\n\n  getUserMedia(type) {\n    if (this.state[type]) {\n      return this.setState({ [type]: false });\n    }\n\n    navigator.mediaDevices.getUserMedia(sources[type])\n      .then((stream) => {\n        if (type === 'audio') {\n          this.setState({ [type]: createAudioSource(stream) });\n        } else {\n          this.setState({ [type]: createVideoSource(stream) });\n        }\n      })\n      .catch(error => this.setState({ [type]: { error } }));\n  }\n\n  record() {\n    if (this.state.isRecording) {\n      return;\n    }\n\n    const outputStream = new MediaStream();\n    const inputStreams = [\n      ...(this.state.audio && this.state.audio.stream ? [this.state.audio.stream] : []),\n      ...(this.state.camera || this.state.screen ? [this.canvas.captureStream()] : []),\n    ];\n\n    inputStreams.forEach(\n      stream => stream.getTracks().forEach(\n        track => outputStream.addTrack(track),\n      ),\n    );\n\n    this.recordedBlobs = [];\n    this.recorder = new MediaRecorder(outputStream, {\n      mimeType: 'video/webm',\n      // audioBitsPerSecond : 128000,\n      // videoBitsPerSecond : 2500000,\n    });\n\n    this.recorder.addEventListener('dataavailable', (e) => {\n      if (e.data && e.data.size > 0) {\n        this.recordedBlobs.push(e.data);\n      }\n    });\n\n    this.recorder.start(1000);\n    this.setState({ isRecording: true, isPaused: false });\n  }\n\n  pause() {\n    if (this.state.isPaused) {\n      this.recorder.resume();\n      this.setState({ isRecording: true, isPaused: false });\n    } else {\n      this.recorder.pause();\n      this.setState({ isRecording: true, isPaused: true });\n    }\n  }\n\n  stop() {\n    this.recorder.stop();\n\n    const blob = new Blob(this.recordedBlobs, { type: 'video/webm' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.style.display = 'none';\n    a.href = url;\n    a.download = 'test.webm';\n    document.body.appendChild(a);\n    a.click();\n    setTimeout(() => {\n      document.body.removeChild(a);\n      window.URL.revokeObjectURL(url);\n      this.setState({ isRecording: false, isPaused: false });\n    }, 100);\n  }\n\n  render() {\n    const { audio, camera, screen, resolution, isRecording, isPaused } = this.state;\n    return (\n      <div style={styles.root}>\n        <canvas\n          width={resolutions[resolution].width}\n          height={resolutions[resolution].height}\n          style={styles.canvas}\n          ref={(canvas) => { this.canvas = canvas; }}\n        ></canvas>\n        <div style={styles.toolbar}>\n          <select disabled={isRecording} value={resolution} onChange={(e) => this.setState({ resolution: e.target.value })}>\n            {Object.keys(resolutions).map(key => (\n              <option key={key} value={key}>{key}</option>\n            ))}\n          </select>\n          <div style={styles.toolbarGroup}>\n            <Button text=\"🎙\" active={!!audio} onClick={() => this.getUserMedia('audio')} />\n            <Button text=\"🎥\" active={!!camera} onClick={() => this.getUserMedia('camera')} />\n            <Button text=\"💻\" active={!!screen} onClick={() => this.getUserMedia('screen')} />\n          </div>\n          <div style={styles.toolbarGroup}>\n            {!isRecording\n              ? <Button text=\"⏺\" active={isRecording} onClick={this.record} />\n              : <Button text=\"⏹\" active={isRecording} onClick={this.stop} />\n            }\n            {isRecording && (\n              <Button\n                text={isPaused ? '▶️' : '⏸️'}\n                active={isPaused} onClick={this.pause}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default Studio;\n","import React from 'react';\nimport TopBar from './components/TopBar';\nimport Studio from './components/Studio';\n\n\nconst App = () => (\n  <div>\n    <TopBar />\n    <Studio />\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}